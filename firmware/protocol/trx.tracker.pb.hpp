/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_TRX_TRACKER_PB_HPP_INCLUDED
#define PB_TRX_TRACKER_PB_HPP_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Type {
    Type_UNKNOWN = 0,
    Type_SQUAD = 1,
    Type_ENEMY = 2
} Type;

/* Struct definitions */
typedef struct _Position {
    int32_t x;
    int32_t y;
} Position;

typedef struct _Entity {
    int32_t id;
    bool has_position;
    Position position;
    Type type;
    int32_t size;
} Entity;

typedef struct _SetEntity_Request {
    bool has_entity;
    Entity entity; /* The entity to set */
} SetEntity_Request;

typedef struct _SetEntity_Response {
    char dummy_field;
} SetEntity_Response;

typedef struct _SetEntity {
    pb_size_t which_message;
    union {
        SetEntity_Request request;
        SetEntity_Response response;
        pb_callback_t error; /* Error message if any */
    } message;
} SetEntity;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _Type_MIN Type_UNKNOWN
#define _Type_MAX Type_ENEMY
#define _Type_ARRAYSIZE ((Type)(Type_ENEMY+1))

#define Entity_type_ENUMTYPE Type






/* Initializer values for message structs */
#define Entity_init_default                      {0, false, Position_init_default, _Type_MIN, 0}
#define Position_init_default                    {0, 0}
#define SetEntity_init_default                   {0, {SetEntity_Request_init_default}}
#define SetEntity_Request_init_default           {false, Entity_init_default}
#define SetEntity_Response_init_default          {0}
#define Entity_init_zero                         {0, false, Position_init_zero, _Type_MIN, 0}
#define Position_init_zero                       {0, 0}
#define SetEntity_init_zero                      {0, {SetEntity_Request_init_zero}}
#define SetEntity_Request_init_zero              {false, Entity_init_zero}
#define SetEntity_Response_init_zero             {0}

/* Field tags (for use in manual encoding/decoding) */
#define Position_x_tag                           1
#define Position_y_tag                           2
#define Entity_id_tag                            1
#define Entity_position_tag                      2
#define Entity_type_tag                          3
#define Entity_size_tag                          4
#define SetEntity_Request_entity_tag             1
#define SetEntity_request_tag                    1
#define SetEntity_response_tag                   2
#define SetEntity_error_tag                      3

/* Struct field encoding specification for nanopb */
#define Entity_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  position,          2) \
X(a, STATIC,   SINGULAR, UENUM,    type,              3) \
X(a, STATIC,   SINGULAR, INT32,    size,              4)
#define Entity_CALLBACK NULL
#define Entity_DEFAULT NULL
#define Entity_position_MSGTYPE Position

#define Position_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    x,                 1) \
X(a, STATIC,   SINGULAR, INT32,    y,                 2)
#define Position_CALLBACK NULL
#define Position_DEFAULT NULL

#define SetEntity_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,request,message.request),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,response,message.response),   2) \
X(a, CALLBACK, ONEOF,    STRING,   (message,error,message.error),   3)
#define SetEntity_CALLBACK pb_default_field_callback
#define SetEntity_DEFAULT NULL
#define SetEntity_message_request_MSGTYPE SetEntity_Request
#define SetEntity_message_response_MSGTYPE SetEntity_Response

#define SetEntity_Request_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  entity,            1)
#define SetEntity_Request_CALLBACK NULL
#define SetEntity_Request_DEFAULT NULL
#define SetEntity_Request_entity_MSGTYPE Entity

#define SetEntity_Response_FIELDLIST(X, a) \

#define SetEntity_Response_CALLBACK NULL
#define SetEntity_Response_DEFAULT NULL

extern const pb_msgdesc_t Entity_msg;
extern const pb_msgdesc_t Position_msg;
extern const pb_msgdesc_t SetEntity_msg;
extern const pb_msgdesc_t SetEntity_Request_msg;
extern const pb_msgdesc_t SetEntity_Response_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Entity_fields &Entity_msg
#define Position_fields &Position_msg
#define SetEntity_fields &SetEntity_msg
#define SetEntity_Request_fields &SetEntity_Request_msg
#define SetEntity_Response_fields &SetEntity_Response_msg

/* Maximum encoded size of messages (where known) */
/* SetEntity_size depends on runtime parameters */
#define Entity_size                              48
#define Position_size                            22
#define SetEntity_Request_size                   50
#define SetEntity_Response_size                  0
#define TRX_TRACKER_PB_HPP_MAX_SIZE              SetEntity_Request_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
