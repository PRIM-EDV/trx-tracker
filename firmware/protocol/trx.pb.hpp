/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_TRX_PB_HPP_INCLUDED
#define PB_TRX_PB_HPP_INCLUDED
#include <pb.h>
#include "trx.device.pb.hpp"
#include "trx.tracker.pb.hpp"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Request {
    pb_size_t which_request;
    union {
        /* Device */
        GetBatteryStatus_Request getBatteryStatus;
        GetDeviceInfo_Request getDeviceInfo;
        /* Tracker */
        SetEntity_Request setEntity;
    } request;
} Request;

typedef struct _Response {
    pb_size_t which_response;
    union {
        /* Device */
        GetBatteryStatus_Response getBatteryStatus;
        GetDeviceInfo_Response getDeviceInfo;
        /* Tracker */
        SetEntity_Response setEntity;
    } response;
} Response;

typedef struct _Error {
    pb_callback_t type;
    pb_callback_t message;
} Error;

typedef struct _TrxMessage {
    pb_callback_t id;
    pb_size_t which_message;
    union {
        Request request;
        Response response;
        Error error;
    } message;
} TrxMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Request_init_default                     {0, {GetBatteryStatus_Request_init_default}}
#define Response_init_default                    {0, {GetBatteryStatus_Response_init_default}}
#define Error_init_default                       {{{NULL}, NULL}, {{NULL}, NULL}}
#define TrxMessage_init_default                  {{{NULL}, NULL}, 0, {Request_init_default}}
#define Request_init_zero                        {0, {GetBatteryStatus_Request_init_zero}}
#define Response_init_zero                       {0, {GetBatteryStatus_Response_init_zero}}
#define Error_init_zero                          {{{NULL}, NULL}, {{NULL}, NULL}}
#define TrxMessage_init_zero                     {{{NULL}, NULL}, 0, {Request_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define Request_getBatteryStatus_tag             1
#define Request_getDeviceInfo_tag                2
#define Request_setEntity_tag                    10
#define Response_getBatteryStatus_tag            1
#define Response_getDeviceInfo_tag               2
#define Response_setEntity_tag                   10
#define Error_type_tag                           1
#define Error_message_tag                        2
#define TrxMessage_id_tag                        1
#define TrxMessage_request_tag                   2
#define TrxMessage_response_tag                  3
#define TrxMessage_error_tag                     4

/* Struct field encoding specification for nanopb */
#define Request_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,getBatteryStatus,request.getBatteryStatus),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,getDeviceInfo,request.getDeviceInfo),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,setEntity,request.setEntity),  10)
#define Request_CALLBACK NULL
#define Request_DEFAULT NULL
#define Request_request_getBatteryStatus_MSGTYPE GetBatteryStatus_Request
#define Request_request_getDeviceInfo_MSGTYPE GetDeviceInfo_Request
#define Request_request_setEntity_MSGTYPE SetEntity_Request

#define Response_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,getBatteryStatus,response.getBatteryStatus),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,getDeviceInfo,response.getDeviceInfo),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,setEntity,response.setEntity),  10)
#define Response_CALLBACK NULL
#define Response_DEFAULT NULL
#define Response_response_getBatteryStatus_MSGTYPE GetBatteryStatus_Response
#define Response_response_getDeviceInfo_MSGTYPE GetDeviceInfo_Response
#define Response_response_setEntity_MSGTYPE SetEntity_Response

#define Error_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   type,              1) \
X(a, CALLBACK, SINGULAR, STRING,   message,           2)
#define Error_CALLBACK pb_default_field_callback
#define Error_DEFAULT NULL

#define TrxMessage_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   id,                1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,request,message.request),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,response,message.response),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,error,message.error),   4)
#define TrxMessage_CALLBACK pb_default_field_callback
#define TrxMessage_DEFAULT NULL
#define TrxMessage_message_request_MSGTYPE Request
#define TrxMessage_message_response_MSGTYPE Response
#define TrxMessage_message_error_MSGTYPE Error

extern const pb_msgdesc_t Request_msg;
extern const pb_msgdesc_t Response_msg;
extern const pb_msgdesc_t Error_msg;
extern const pb_msgdesc_t TrxMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Request_fields &Request_msg
#define Response_fields &Response_msg
#define Error_fields &Error_msg
#define TrxMessage_fields &TrxMessage_msg

/* Maximum encoded size of messages (where known) */
#if defined(GetDeviceInfo_Response_size)
union Response_response_size_union {char f2[(6 + GetDeviceInfo_Response_size)]; char f0[15];};
#endif
/* Error_size depends on runtime parameters */
/* TrxMessage_size depends on runtime parameters */
#define Request_size                             52
#define TRX_PB_HPP_MAX_SIZE                      Request_size
#if defined(GetDeviceInfo_Response_size)
#define Response_size                            (0 + sizeof(union Response_response_size_union))
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
